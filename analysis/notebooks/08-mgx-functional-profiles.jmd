---
title: "Notebook 8: Metagenomes Functional Profiles"
author: "Kevin Bonham, PhD"
options:
    line_width : 120
    wrap : false
---

Now we've been through some analyses of the taxonomic profiles,
but metagenomes *also* allow the generation of functional profiles;
that is, what genes are present in a given community.

These profiles were generated with [HUMANn2](http://huttenhower.sph.harvard.edu/humann2).

```julia; echo=false; results="hidden"
using ECHOAnalysis
using Microbiome
using BiobakeryUtils
using StatsPlots
using DataFrames
using Distances
using PrettyTables
using CSV

rounder = Dict(0 => (v,i) -> typeof(v) <: AbstractFloat ? round(v,digits=3) : v)
@ptconfclean # clear previous configuration
@ptconf formatter = rounder nosubheader=true screen_size=(20,120)

(outpath, figures) = notebookpaths!(8)
```

## Kegg Orthology functions

```julia; results="hidden"
kos = CSV.read("data/engaging/merged/batch1-10_kos_names.csv")
names!(kos, map(n-> Symbol(resolve_sampleID(replace(String(n), "_Abundance-RPKs"=>"")).sample), names(kos)))
# ~ 5% prevalence filter
kos = kos[map(row-> sum(x-> x > 0, row[Not(1)]) > ncol(kos) * .05, eachrow(kos)), :]
kos = abundancetable(kos)
relativeabundance!(kos)
```

```julia
allsamples = resolve_sampleID.(samplenames(kos))
uabt = view(kos, sites=getfield.(uniquesamples(allsamples, takefirst=true), :sample))
usamples = resolve_sampleID.(samplenames(uabt))
umeta = load_metadata(datatoml, samples=usamples)

kidssamples = uniquesamples(allsamples,
                    samplefilter=s-> startswith(s, "C"),
                    takefirst=true, identifiers=[:subject])
momsamples = uniquesamples(allsamples,
                    samplefilter=s-> startswith(s, "M"),
                    takefirst=true, identifiers=[:subject])


kids = view(kos, sites=getfield.(kidssamples, :sample))
moms = view(kos, sites=getfield.(momsamples, :sample))

kidsmeta = load_metadata(datatoml, samples=kidssamples)
momsmeta = load_metadata(datatoml, samples=momsamples)

```
```julia
using StatsPlots
using MultivariateStats

udm = pairwise(BrayCurtis(), uabt, dims=2)

labels = map(eachrow(umeta)) do row
    age = row[:correctedAgeDays] / 365
    if startswith(row[:sample], "C")
        if !ismissing(age)
            if age <= 1
                return "1 and under"
            elseif age <= 2
                return "1 to 2"
            else
                return "2 and over"
            end
        else
            return missing
        end
    elseif startswith(row[:sample], "M")
        return "mom"
    else
        return missing
    end
end

notmissing = .!ismissing.(labels)

nmumds = fit(MDS, udm[notmissing, notmissing], distances=true)
plot(nmumds, group=String.(labels[notmissing]), legend=:bottomleft)
title!("Functional Profiles (KOs)")
```
```julia; echo=false; results="hidden"
savefig(joinpath(figures, "kos_unique_pcoa.svg"))
```
