var documenterSearchIndex = {"docs":
[{"location":"metadata_handling/#Subject-and-Sample-Metadata-1","page":"Dealing with Metadata","title":"Subject and Sample Metadata","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"Pages = [\"metadata_handling.md\"]","category":"page"},{"location":"metadata_handling/#Functions-1","page":"Dealing with Metadata","title":"Functions","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"Modules = [ECHOAnalysis]\nPages = [\"metadata_handling.jl\"]\nPrivate = false","category":"page"},{"location":"metadata_handling/#ECHOAnalysis.breastfeeding-Tuple{DataFrames.DataFrameRow}","page":"Dealing with Metadata","title":"ECHOAnalysis.breastfeeding","text":"breastfeeding(row::DataFrameRow)\n\nChecks a wide-form metadata row for breastfeeding information. Possible return values are\n\n:breastfed: at least 3 months exlussively breastfed,   or where at least 80% of feedings are from breast\n:formulafed: no breastmilk after 2 weeks\n:mixed: all others\nmissing: not enough information\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.numberify-Tuple{Any}","page":"Dealing with Metadata","title":"ECHOAnalysis.numberify","text":"numberify(x)\nnumberify(v::AbstractArray)\n\nTry to convert something into a number or array of numbers using the heuristics:\n\nif x is already a number or is missing, return x\nif x is a String:\nif x contains a . or e, parse as a Float64\nOtherwise parse as an Int\nif x is anything other than a String or a Number, return missing\nif v is already an array of numbers (and missing), return v\nif numberified vector contains any Floats, return a vector of missing and Float64\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.uniquetimepoints-Tuple{AbstractArray{#s37,1} where #s37<:StoolSample}","page":"Dealing with Metadata","title":"ECHOAnalysis.uniquetimepoints","text":"uniquetimepoints(samples::AbstractVector{<:StoolSample};\n                    skipethanol=true,\n                    samplefilter=x->true,\n                    sortfirst=true,\n                    takefirst=true)\n\nIdentifies unique timepoints (that is, subject=>timepoint pairs) from a vector of [AbstractTimepoint]@ref.\n\nExample:\n\nGiven the following array of 4 samples:\n\ns = stoolsample([\"C0001_1F_1A\", \"C0001_1F_2A\", \"C0001_2F_1A\", \"C0002_1F_1A\"])\n\nThe first three samples are from the same subject, the first two of which are from the same timepoint (they're replicates).\n\nBy default, this function excludes duplicate subject-timepoints, but keeps multiple timepoints for each individual subject. If a single timepoint from each subject is desired, use takefirst=true. In this later case, leave sortfirst=true (the default) to be sure to take the earliest timepoint for each subject.\n\nOther parameters\n\nskipethanol=true: exlude samples that match the pattern _\\dE_,   that is ethanol (as opposed to genotek) samples.\nsamplefilter=x->true: a function to select samples to include. By default, all samples are included. Use samplefilter=iskid to include only child samples for example.\nsortfirst=true: if true, sorts the vector at the beginning\ntakefirst=false: if true, only takes 1 timepoint for each subject.   Use with sortfirst to get only the first timepoint.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.widemetadata-Tuple{DataFrames.AbstractDataFrame,Array{#s34,1} where #s34<:StoolSample}","page":"Dealing with Metadata","title":"ECHOAnalysis.widemetadata","text":"widemetadata(longdf::AbstractDataFrame, samples::Vector{<:StoolSample};\n                    metadata::Set=Set(unique(longdf.metadatum)),\n                    parents::Set=Set(unique(longdf.parent_table)))\nwidemetadata(longdf::AbstractDataFrame, samples::Vector{<:AbstractString}; kwargs...)\nwidemetadata(db::SQLite.DB, tablename, samples; kwargs...)\n\nConvert data in a long-form metadata table into wide-form, where each sample is given a single row and each metadatum a single column.\n\nTimepoint-specific metadata (specifically, metadata that comes from a parent table that has a timepoint field) is only associated with samples from that timepoint, while others (eg. childGender) are associated with every sample for a given subject.\n\nOptional key word args:     - Pass vector of Parent Tables (parents) to include     - Pass vector of metadatum fields (metadata) to include\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#Index-1","page":"Dealing with Metadata","title":"Index","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"","category":"page"},{"location":"samples/#Timepoints-and-Samples-1","page":"Timepoints and Samples","title":"Timepoints and Samples","text":"","category":"section"},{"location":"samples/#","page":"Timepoints and Samples","title":"Timepoints and Samples","text":"Pages = [\"samples.md\"]","category":"page"},{"location":"samples/#Functions-1","page":"Timepoints and Samples","title":"Functions","text":"","category":"section"},{"location":"samples/#","page":"Timepoints and Samples","title":"Timepoints and Samples","text":"Modules = [ECHOAnalysis]\nPages = [\"samples.jl\"]\nPrivate = false","category":"page"},{"location":"samples/#ECHOAnalysis.AbstractTimepoint","page":"Timepoints and Samples","title":"ECHOAnalysis.AbstractTimepoint","text":"Represents a given timepoint data collection or sample.\n\nRequired fields:\n\nid – String: the unique identifier\nsubject – Int: the subject ID\ntimepoint – Int: The timepoint. For some data types, this will be 0 indicating that it applies to all timepoints for that subject.\n\n\n\n\n\n","category":"type"},{"location":"samples/#ECHOAnalysis.StoolSample","page":"Timepoints and Samples","title":"ECHOAnalysis.StoolSample","text":"Represents a given stool sample\n\nFields:\n\nid – String: the unique sample identifier\nsubject – Int: the subject ID\ntimepoint – Int: The timepoint. For some metadata, this will be 0\nreplicate – String: replicate / aliquot ID (eg \"2B\")\ntype – String: \"omnigene\" or \"ethanol\"\n\n\n\n\n\n","category":"type"},{"location":"samples/#ECHOAnalysis.iskid-Tuple{StoolSample}","page":"Timepoints and Samples","title":"ECHOAnalysis.iskid","text":"iskid(s::Union{AbstractString, StoolSample})\n\nReturn true if StoolSample (or a String that can be converted to StoolSample) refers to a child sample, false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.ismom-Tuple{StoolSample}","page":"Timepoints and Samples","title":"ECHOAnalysis.ismom","text":"ismom(s::Union{AbstractString, StoolSample})\n\nReturn true if StoolSample (or a String that can be converted to StoolSample) refers to a maternal sample, false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.isstoolsample-Tuple{StoolSample}","page":"Timepoints and Samples","title":"ECHOAnalysis.isstoolsample","text":"isstoolsample(sid::Union{AbstractString, AbstractTimepoint, StoolSample})\n\nReturns true if sid is a StoolSample, or if an AbstractTimepoint's id field or AbstractString conforms to the expected form of an ECHO RESONANCE stool sample.\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.replicateid-Tuple{StoolSample}","page":"Timepoints and Samples","title":"ECHOAnalysis.replicateid","text":"replicateid(s::Union{AbstractString, StoolSample})\n\nGet the replicate field from a StoolSample (or a String that can be converted to StoolSample).\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.resolve_letter_timepoint-Tuple{AbstractString}","page":"Timepoints and Samples","title":"ECHOAnalysis.resolve_letter_timepoint","text":"resolve_letter_timepoint(sid::AbstractString)\nresolve_letter_timepoint(sid::Missing)\n\nDeals with sampleIDs in which the timepoint is given as a letter. Eg. 40b indicates timepoint 2 from subject ID 40. If no letter is provided, timepoint is assumed to be 1.\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.sampleid-Tuple{AbstractTimepoint}","page":"Timepoints and Samples","title":"ECHOAnalysis.sampleid","text":"sampleid(s::AbstractTimepoint)\n\nGet the id field from an AbstractTimepoint.\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.sampletype-Tuple{StoolSample}","page":"Timepoints and Samples","title":"ECHOAnalysis.sampletype","text":"sampletype(s::Union{AbstractString, StoolSample})\n\nGet the type field from a StoolSample (or a String that can be converted to StoolSample).\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.stoolsample-Tuple{String}","page":"Timepoints and Samples","title":"ECHOAnalysis.stoolsample","text":"stoolsample(sid::Union{AbstractString,Symbol})\n\nParse a sample ID and create a StoolSample.\n\nExample: For the sample C0040_3F_1A:\n\nC0040 means \"\"Child, subject ID 40\"\n3F means \"timepoint 3\", Fecal (omnigene). May also be E for Ethanol.\n1A means \"replicate 1, aliquot A\"\nHyphens in sample names are converted to underscores (so \"C00011F1A\" == \"C0001-1F-1A\")\nSamples may also end with _S\\d+ (well #s from sequencing) which are ignored\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.subject-Tuple{AbstractTimepoint}","page":"Timepoints and Samples","title":"ECHOAnalysis.subject","text":"subject(s::AbstractTimepoint)\n\nGet the subject field from an AbstractTimepoint.\n\n\n\n\n\n","category":"method"},{"location":"samples/#ECHOAnalysis.timepoint-Tuple{AbstractTimepoint}","page":"Timepoints and Samples","title":"ECHOAnalysis.timepoint","text":"timepoint(s::AbstractTimepoint)\n\nGet the timepoint field from an AbstractTimepoint.\n\n\n\n\n\n","category":"method"},{"location":"samples/#Index-1","page":"Timepoints and Samples","title":"Index","text":"","category":"section"},{"location":"samples/#","page":"Timepoints and Samples","title":"Timepoints and Samples","text":"","category":"page"},{"location":"#Getting-Started-1","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"#About-this-section-1","page":"Getting Started","title":"About this section","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"The notebooks in this section describe the analyses performed.","category":"page"},{"location":"#Running-the-code-1","page":"Getting Started","title":"Running the code","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"TODO:","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"[ ] how to find notebooks\n[ ] how to run code","category":"page"},{"location":"#Table-of-Contents-1","page":"Getting Started","title":"Table of Contents","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"depth=4","category":"page"},{"location":"#Introduction-1","page":"Getting Started","title":"Introduction","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"Most of the code in these notebooks is written in [julia][1], and can be run on a standard laptop. In order to run this code using the same version of packages, first install julia on your machine ([click here][2] for julia installation instructions).","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"[1]: http://julialang.org [2]: https://julialang.org/downloads/","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"Next, clone this repository and instantiate the project.","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"more description","category":"page"},{"location":"sqlops/#SQLite-database-operations-1","page":"SQLite operations","title":"SQLite database operations","text":"","category":"section"},{"location":"sqlops/#","page":"SQLite operations","title":"SQLite operations","text":"Pages = [\"sqlops.md\"]","category":"page"},{"location":"sqlops/#Functions-1","page":"SQLite operations","title":"Functions","text":"","category":"section"},{"location":"sqlops/#","page":"SQLite operations","title":"SQLite operations","text":"Modules = [ECHOAnalysis]\nPages = [\"sqlops.jl\"]\nPrivate = false","category":"page"},{"location":"sqlops/#ECHOAnalysis.add_functional_profiles-Tuple{SQLite.DB,Any}","page":"SQLite operations","title":"ECHOAnalysis.add_functional_profiles","text":"add_functional_profiles(db::SQLite.DB, biobakery_path;\n    kind=\"genefamiles_relab\", stratified=false, replace=false,\n    foldermatch=r\"output/humann2\", samples=:all)\n\nAdd functional profiles to an SQLite database. Expects kind to come just before .tsv in filenames, eg C0001_1E_1A_genefamilies_relab.tsv should have kind=\"genefamilies_relab\".\n\n\n\n\n\n","category":"method"},{"location":"sqlops/#ECHOAnalysis.add_taxonomic_profiles-Tuple{SQLite.DB,Any}","page":"SQLite operations","title":"ECHOAnalysis.add_taxonomic_profiles","text":"add_taxonomic_profiles(db::SQLite.DB, biobakery_path; replace=false, foldermatch=r\"metaphlan2/main\")\n\nAdd taxonomic profiles to an SQLite database.\n\n\n\n\n\n","category":"method"},{"location":"sqlops/#ECHOAnalysis.sampletable-Tuple{AbstractArray{#s40,1} where #s40<:AbstractString}","page":"SQLite operations","title":"ECHOAnalysis.sampletable","text":"sampletable(rawfastqs::AbastractVector{<:AbstractString})\n\nGet table with sample names and sample types from a rawfastq folder.\n\n\n\n\n\n","category":"method"},{"location":"sqlops/#ECHOAnalysis.sqlprofile-Tuple{SQLite.DB}","page":"SQLite operations","title":"ECHOAnalysis.sqlprofile","text":"sqlprofile(db::SQLite.DB;\n                tablename=\"taxa\", kind=\"species\",\n                stratified=false, samplefilter=x->true,\n                prevalencefilter=(0.,1.)\n\nGet a taxonomic or functional profile from SQLite database. Returns dictionaries mapping sample-> column number and feature-> row number, along with a SparseArray of values.\n\n\n\n\n\n","category":"method"},{"location":"sqlops/#Index-1","page":"SQLite operations","title":"Index","text":"","category":"section"},{"location":"sqlops/#","page":"SQLite operations","title":"SQLite operations","text":"","category":"page"}]
}
