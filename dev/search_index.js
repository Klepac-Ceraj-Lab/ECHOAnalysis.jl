var documenterSearchIndex = {"docs":
[{"location":"metadata_handling/#Subject-and-Sample-Metadata-1","page":"Dealing with Metadata","title":"Subject and Sample Metadata","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"Pages = [\"metadata_handling.md\"]","category":"page"},{"location":"metadata_handling/#Functions-1","page":"Dealing with Metadata","title":"Functions","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"Modules = [ECHOAnalysis]\nPages = [\"metadata_handling.jl\"]\nPrivate = false","category":"page"},{"location":"metadata_handling/#ECHOAnalysis.breastfeeding-Tuple{DataFrames.DataFrameRow}","page":"Dealing with Metadata","title":"ECHOAnalysis.breastfeeding","text":"breastfeeding(row::DataFrameRow)\n\nChecks a wide-form metadata row for breastfeeding information. Returns true if any of the following are true:\n\n:milkFeedingMethods contains \"breast\"\n:exclusivelyNursed is \"Yes\" (or \"yes\")\nBoth :exclusivelyNursed and :exclusiveFormulaFed are \"No\" (or \"no\")\nAny of the following have values > 0:\n:typicalNumberOfFeedsFromBreast\n:typicalNumberOfEpressedMilkFeeds\n:lengthExclusivelyNursedMonths\n:noLongerFeedBreastmilkAge\n\nOtherwise returns false.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.formulafeeding-Tuple{DataFrames.DataFrameRow}","page":"Dealing with Metadata","title":"ECHOAnalysis.formulafeeding","text":"formulafeeding(row::DataFrameRow)\n\nChecks a wide-form metadata row for formula feeding information. Returns true if any of the following are true:\n\n:milkFeedingMethods contains \"Formula\" (or \"formula\")\n:exclusivelyFormulaFed is \"Yes\" (or \"yes\")\nBoth :exclusivelyNursed and :exclusiveFormulaFed are \"No\" (or \"no\")\n:amountFormulaPerFeed is > 0:\nEither :amountFormulaPerFeed or :formulaTypicalType have (non-missing) values\n\nOtherwise returns false.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getfocusmetadata-Tuple{AbstractString,Array{#s17,1} where #s17<:NamedTuple}","page":"Dealing with Metadata","title":"ECHOAnalysis.getfocusmetadata","text":"getfocusmetadata(longfilepath, samples; focus=metadata_focus_headers)\n\nGet a wide-form metadata table with a subset of headers for a subset of subject/sample IDs\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getfocusmetadata-Tuple{DataFrames.AbstractDataFrame,Array{#s16,1} where #s16<:NamedTuple}","page":"Dealing with Metadata","title":"ECHOAnalysis.getfocusmetadata","text":"getfocusmetadata(df, samples; focus=metadata_focus_headers)\n\nGet a wide-form metadata table with a subset of headers for a subset of subject/sample IDs\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getmetadata-Tuple{DataFrames.AbstractDataFrame,Array{Int64,1},Array{Int64,1},Array{#s19,1} where #s19<:AbstractString}","page":"Dealing with Metadata","title":"ECHOAnalysis.getmetadata","text":"Get the metadata values for a given set of subjects and timepoints\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getmetadatum","page":"Dealing with Metadata","title":"ECHOAnalysis.getmetadatum","text":"Get the metadata value for a given subject and timepoint\n\n\n\n\n\n","category":"function"},{"location":"metadata_handling/#ECHOAnalysis.metacolor-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T}","page":"Dealing with Metadata","title":"ECHOAnalysis.metacolor","text":"metacolor(metadata::AbstractVector, colorlevels::AbstractVector; missing_color=colorant\"gray\")\n\nConvert metadata into colors\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.numberify-Tuple{Any}","page":"Dealing with Metadata","title":"ECHOAnalysis.numberify","text":"numberify(x)\nnumberify(v::AbstractArray)\n\nTry to convert something into a number or array of numbers using the heuristics:\n\nif x is already a number or is missing, return x\nif v is already an array of numbers, return v\nif x is a String:\nif x contains a . or e, parse as a Float64\nOtherwise parse as an Int\nif numberified vector contains any Floats, return a vector of missing and Float64\nif x is anything other than a String or a number, return missing\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.resolve_letter_timepoint-Tuple{AbstractString}","page":"Dealing with Metadata","title":"ECHOAnalysis.resolve_letter_timepoint","text":"resolve_letter_timepoint(sid::AbstractString)\nresolve_letter_timepoint(sid::Missing)\n\nDeals with sampleIDs in which the timepoint is given as a letter. Eg. 40b indicates timepoint 2 from subject ID 40. If no letter is provided, timepoint is assumed to be 1.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.resolve_sampleID-Tuple{Union{AbstractString, Symbol}}","page":"Dealing with Metadata","title":"ECHOAnalysis.resolve_sampleID","text":"resolve_sampleID(sid::Union{AbstractString,Symbol})\nresolve_sampleID(sids::Vector{<:Union{AbstractString,Symbol}})\n\nParse a sample name and return its components as a named tuple:\n\nExample: For the sample C0040_3F_1A:\n\nC0040 means \"\"Child, subject ID 40\"\n3F means \"timepoint 3\", Fecal (genotech). May also be E for Ethanol.\n1A means \"replicate 1, aliquot A\"\nHyphens in sample names are converted to underscores (so \"C00011F1A\" == \"C0001-1F-1A\")\nSamples may also end with _S\\d+ (well #s from sequencing) which are ignored\nSamples that don't match the expected pattern return (sample=sid, subject=nothing, timepoint=nothing)\n\nThis function returns the NamedTuple (sample=\"C0040_3F_1A\", subject=40, timepoint=3)\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.samplelessthan-Union{Tuple{T}, Tuple{T,T}} where T<:NamedTuple","page":"Dealing with Metadata","title":"ECHOAnalysis.samplelessthan","text":"samplelessthan(x::T, y::T) where T <: NamedTuple\nsamplelessthan(x::T, y::T) where T <: Union{AbstractString, Symbol}\n\nFunction to use for sorting NamedTuples from sample IDs. String versions of sampleIDs will be parsed with resolve_sampleID\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.uniquesamples-Tuple{AbstractArray{#s17,1} where #s17<:NamedTuple}","page":"Dealing with Metadata","title":"ECHOAnalysis.uniquesamples","text":"uniquesamples(samples::AbstractVector{<:NamedTuple}, identifiers::Vector{Symbol}=[:subject,:timepoint];\n                    skipethanol=true, samplefilter=x->true)\n\nIdentifies unique samples from a vector of sample tuples. Tuples must have a sample field, and additional fields specified in identifiers. Multiple items that have the same values among the identifiers will be excluded.\n\nExample:\n\nGiven the following array of 4 samples:\n\ns = [(sample=\"C0001_1F_1A\", subject=1, timepoint=1),\n     (sample=\"C0001_1F_2A\", subject=1, timepoint=1),\n     (sample=\"C0001_2F_1A\", subject=1, timepoint=2)\n     (sample=\"C0002_1F_1A\", subject=2, timepoint=1)];\n\nBy default, identifiers = [:subject, :timepoint], meaning only the second item would be excluded (since both it and the first item are subject 1, timepoint 1).\n\nA single timepoint for each subject can be acquired by passing identifiers=[:subject].\n\nuniquesamples(s)\n\nuniquesamples(s, identifiers=[:subject])\n\nOther parameters\n\nskipethanol=true: exlude samples that match the pattern _\\dE_,   that is ethanol (as opposed to genotek) samples.\nsamplefilter=x->true: a function to select samples to include. By default, all samples are included. Use samplefilter=x->startswith(x, \"C\") to include only child samples for example.\ntakefirst=true: if true, sorts the samples using [samplelessthan]@ref\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#Index-1","page":"Dealing with Metadata","title":"Index","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"","category":"page"},{"location":"file_handling/#File-Handling-1","page":"File Handling","title":"File Handling","text":"","category":"section"},{"location":"file_handling/#","page":"File Handling","title":"File Handling","text":"Pages = [\"file_handling.md\"]","category":"page"},{"location":"file_handling/#Functions-1","page":"File Handling","title":"Functions","text":"","category":"section"},{"location":"file_handling/#","page":"File Handling","title":"File Handling","text":"Modules = [ECHOAnalysis]\nPages = [\"file_handling.jl\"]\nPrivate = false","category":"page"},{"location":"file_handling/#ECHOAnalysis.add_batch_info-Tuple{AbstractString}","page":"File Handling","title":"ECHOAnalysis.add_batch_info","text":"add_batch_info(folder::AbstractString)\n\nAdd batch info to merged/ folders.\n\nExample:     batch001/metaplan2/merged/metaphlan2_taxonomic_profiles.tsv     to     batch001/metaplan2/merged/batch001_metaphlan2_taxonomic_profiles.tsv\n\n\n\n\n\n","category":"method"},{"location":"file_handling/#ECHOAnalysis.merge_tables-Tuple{Any,Any,Any}","page":"File Handling","title":"ECHOAnalysis.merge_tables","text":"merge_tables(folder, dataroot, fltr; suffix=fltr)\n\nRecurssively walk through a folder and merge tables inside folders named dataroot with a given filter fltr. The fltr is assumed to be the end of the filename and removed, but a different suffix may be provided.\n\nUsage:     mergetables(\"biobakery\", \"metaphlan2\", \"profile.tsv\")\n\n\n\n\n\n","category":"method"},{"location":"file_handling/#ECHOAnalysis.samples_from_file-Tuple{AbstractString}","page":"File Handling","title":"ECHOAnalysis.samples_from_file","text":"samples_from_file(file::AbstractString; delim::Char)\n\nRead the first line of a file, and pull out sampleIDs\n\n\n\n\n\n","category":"method"},{"location":"file_handling/#Index-1","page":"File Handling","title":"Index","text":"","category":"section"},{"location":"file_handling/#","page":"File Handling","title":"File Handling","text":"","category":"page"},{"location":"#Getting-Started-1","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"#About-this-section-1","page":"Getting Started","title":"About this section","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"The notebooks in this section describe the analyses performed.","category":"page"},{"location":"#Running-the-code-1","page":"Getting Started","title":"Running the code","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"TODO:","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"[ ] how to find notebooks\n[ ] how to run code","category":"page"},{"location":"#Table-of-Contents-1","page":"Getting Started","title":"Table of Contents","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"depth=4","category":"page"},{"location":"#Introduction-1","page":"Getting Started","title":"Introduction","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"Most of the code in these notebooks is written in [julia][1], and can be run on a standard laptop. In order to run this code using the same version of packages, first install julia on your machine ([click here][2] for julia installation instructions).","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"[1]: http://julialang.org [2]: https://julialang.org/downloads/","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"Next, clone this repository and instantiate the project.","category":"page"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"more description","category":"page"}]
}
