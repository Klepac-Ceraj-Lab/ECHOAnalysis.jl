var documenterSearchIndex = {"docs":
[{"location":"metadata_handling/#Subject-and-Sample-Metadata-1","page":"Dealing with Metadata","title":"Subject and Sample Metadata","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"Pages = [\"metadata_handling.md\"]","category":"page"},{"location":"metadata_handling/#Functions-1","page":"Dealing with Metadata","title":"Functions","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"Modules = [ECHOAnalysis]\nPages = [\"metadata_handling.jl\"]\nPrivate = false","category":"page"},{"location":"metadata_handling/#ECHOAnalysis.breastfeeding-Tuple{DataFrames.DataFrameRow}","page":"Dealing with Metadata","title":"ECHOAnalysis.breastfeeding","text":"breastfeeding(row::DataFrameRow)\n\nChecks a wide-form metadata row for breastfeeding information. Returns true if any of the following are true:\n\n:milkFeedingMethods contains \"breast\"\n:exclusivelyNursed is \"Yes\" (or \"yes\")\nBoth :exclusivelyNursed and :exclusiveFormulaFed are \"No\" (or \"no\")\nAny of the following have values > 0:\n:typicalNumberOfFeedsFromBreast\n:typicalNumberOfEpressedMilkFeeds\n:lengthExclusivelyNursedMonths\n:noLongerFeedBreastmilkAge\n\nOtherwise returns false.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.firstkids-Tuple{AbstractArray{#s20,1} where #s20<:NamedTuple}","page":"Dealing with Metadata","title":"ECHOAnalysis.firstkids","text":"firstkids(samples::Vector{<:NamedTuple}; skipethanol=true)\nfirstkids(samples::Vector{<:AbstractString}; skipethanol=true)\n\nFrom a list of sample ids, identify the earliest sample for each child. Samples may be sample IDs that can be parsed by resolve_sampleID, or NamedTuples containing :subject and :timepoint fields.\n\nIf skipethanol is true, sample names containing _#E_ will be skipped.\n\nReturns a vector of indicies that can be used to slice the original vector.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.formulafeeding-Tuple{DataFrames.DataFrameRow}","page":"Dealing with Metadata","title":"ECHOAnalysis.formulafeeding","text":"formulafeeding(row::DataFrameRow)\n\nChecks a wide-form metadata row for formula feeding information. Returns true if any of the following are true:\n\n:milkFeedingMethods contains \"Formula\" (or \"formula\")\n:exclusivelyFormulaFed is \"Yes\" (or \"yes\")\nBoth :exclusivelyNursed and :exclusiveFormulaFed are \"No\" (or \"no\")\n:amountFormulaPerFeed is > 0:\nEither :amountFormulaPerFeed or :formulaTypicalType have (non-missing) values\n\nOtherwise returns false.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getfocusmetadata-Tuple{AbstractString,Array{#s20,1} where #s20<:NamedTuple}","page":"Dealing with Metadata","title":"ECHOAnalysis.getfocusmetadata","text":"getfocusmetadata(longfilepath, samples; focus=metadata_focus_headers)\n\nGet a wide-form metadata table with a subset of headers for a subset of subject/sample IDs\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getfocusmetadata-Tuple{DataFrames.AbstractDataFrame,Array{#s19,1} where #s19<:NamedTuple}","page":"Dealing with Metadata","title":"ECHOAnalysis.getfocusmetadata","text":"getfocusmetadata(df, samples; focus=metadata_focus_headers)\n\nGet a wide-form metadata table with a subset of headers for a subset of subject/sample IDs\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getmetadata-Tuple{DataFrames.AbstractDataFrame,Array{Int64,1},Array{Int64,1},Array{#s21,1} where #s21<:AbstractString}","page":"Dealing with Metadata","title":"ECHOAnalysis.getmetadata","text":"Get the metadata values for a given set of subjects and timepoints\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.getmetadatum","page":"Dealing with Metadata","title":"ECHOAnalysis.getmetadatum","text":"Get the metadata value for a given subject and timepoint\n\n\n\n\n\n","category":"function"},{"location":"metadata_handling/#ECHOAnalysis.metacolor-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T}","page":"Dealing with Metadata","title":"ECHOAnalysis.metacolor","text":"metacolor(metadata::AbstractVector, colorlevels::AbstractVector; missing_color=colorant\"gray\")\n\nConvert metadata into colors\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.numberify-Tuple{Any}","page":"Dealing with Metadata","title":"ECHOAnalysis.numberify","text":"numberify(x)\nnumberify(v::AbstractArray)\n\nTry to convert something into a number or array of numbers using the heuristics:\n\nif x is already a number or is missing, return x\nif v is already an array of numbers, return v\nif x is a String:\nif x contains a . or e, parse as a Float64\nOtherwise parse as an Int\nif numberified vector contains any Floats, return a vector of missing and Float64\nif x is anything other than a String or a number, return missing\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.resolve_letter_timepoint-Tuple{AbstractString}","page":"Dealing with Metadata","title":"ECHOAnalysis.resolve_letter_timepoint","text":"resolve_letter_timepoint(sid::AbstractString)\nresolve_letter_timepoint(sid::Missing)\n\nDeals with sampleIDs in which the timepoint is given as a letter. Eg. 40b indicates timepoint 2 from subject ID 40. If no letter is provided, timepoint is assumed to be 1.\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.resolve_sampleID-Tuple{Union{AbstractString, Symbol}}","page":"Dealing with Metadata","title":"ECHOAnalysis.resolve_sampleID","text":"resolve_sampleID(sid::Union{AbstractString,Symbol})\n\nParse a sample name and return its components as a named tuple:\n\nExample: For the sample C0040_3F_1A:\n\nC0040 means \"\"Child, subject ID 40\"\n3F means \"timepoint 3\", Fecal (genotech). May also be E for Ethanol.\n1A means \"replicate 1, aliquot A\"\n\nThis function returns the NamedTuple (sample=\"C0040_3F_1A\", subject=40, timepoint=3)\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.samplelessthan-Union{Tuple{T}, Tuple{T,T}} where T<:NamedTuple","page":"Dealing with Metadata","title":"ECHOAnalysis.samplelessthan","text":"samplelessthan(x::T, y::T) where T <: NamedTuple\nsamplelessthan(x::T, y::T) where T <: AbstractString\n\nFunction to use for sorting NamedTuples from sample IDs. String versions of sampleIDs will be parsed with resolve_sampleID\n\n\n\n\n\n","category":"method"},{"location":"metadata_handling/#ECHOAnalysis.uniquesamples","page":"Dealing with Metadata","title":"ECHOAnalysis.uniquesamples","text":"uniquesamples(samples::AbstractVector{<:NamedTuple}, identifiers::Vector{Symbol}=[:subject,:timepoint];\n                    skipethanol=true, samplefilter=x->true)\n\n\n\n\n\n","category":"function"},{"location":"metadata_handling/#Index-1","page":"Dealing with Metadata","title":"Index","text":"","category":"section"},{"location":"metadata_handling/#","page":"Dealing with Metadata","title":"Dealing with Metadata","text":"","category":"page"},{"location":"file_handling/#File-Handling-1","page":"File Handling","title":"File Handling","text":"","category":"section"},{"location":"file_handling/#","page":"File Handling","title":"File Handling","text":"Pages = [\"file_handling.md\"]","category":"page"},{"location":"file_handling/#Functions-1","page":"File Handling","title":"Functions","text":"","category":"section"},{"location":"file_handling/#","page":"File Handling","title":"File Handling","text":"Modules = [ECHOAnalysis]\nPages = [\"file_handling.jl\"]\nPrivate = false","category":"page"},{"location":"file_handling/#ECHOAnalysis.add_batch_info-Tuple{AbstractString}","page":"File Handling","title":"ECHOAnalysis.add_batch_info","text":"add_batch_info(folder::AbstractString)\n\nAdd batch info to merged/ folders.\n\nExample:     batch001/metaplan2/merged/metaphlan2_taxonomic_profiles.tsv     to     batch001/metaplan2/merged/batch001_metaphlan2_taxonomic_profiles.tsv\n\n\n\n\n\n","category":"method"},{"location":"file_handling/#ECHOAnalysis.merge_tables-Tuple{Any,Any,Any}","page":"File Handling","title":"ECHOAnalysis.merge_tables","text":"merge_tables(folder, dataroot, fltr; suffix=fltr)\n\nRecurssively walk through a folder and merge tables inside folders named dataroot with a given filter fltr. The fltr is assumed to be the end of the filename and removed, but a different suffix may be provided.\n\nUsage:     mergetables(\"biobakery\", \"metaphlan2\", \"profile.tsv\")\n\n\n\n\n\n","category":"method"},{"location":"file_handling/#Index-1","page":"File Handling","title":"Index","text":"","category":"section"},{"location":"file_handling/#","page":"File Handling","title":"File Handling","text":"","category":"page"},{"location":"#Getting-Started-1","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"#","page":"Getting Started","title":"Getting Started","text":"depth=4","category":"page"}]
}
